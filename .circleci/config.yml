version: 2

jobs:
  build:
    docker:
      - image: gradle:jre8
      - image: mongo:4
    steps:
      - checkout

      - restore_cache:
          keys:
            - gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

      - restore_cache:
          keys:
            - gradle-cache-{{ checksum "build.gradle" }}
            - gradle-cache

      - restore_cache:
          keys:
            - gradle-build-caches-{{ .Revision }}
            - gradle-build-caches

      - run:
          name: Restoring Gradle Build Caches
          command: |
            [ -d ~/gradle-build-caches ] &&
            [ -n "$(ls -A ~/gradle-build-caches)" ] &&
            rm -rf ~/.gradle/caches/build-cache-* &&
            mv ~/gradle-build-caches/* ~/.gradle/caches/ || true

      - run:
          name: Downloading Dependencies
          command: ./gradlew --max-workers 2 downloadDependencies

      - save_cache:
          paths:
            - ~/.gradle/wrapper/
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

      - save_cache:
          paths:
            - ~/.gradle/caches/
          key: gradle-cache-{{ checksum "build.gradle" }}

      - run:
          name: Run tests
          environment:
            - MONGODB_PORT_27017_TCP_ADDR="127.0.0.1"
          command: ./gradlew test

      - run:
          name: Build Project
          command: ./gradlew --max-workers 2 --continue clean build -x test --info

      - store_artifact:
          path: ./build/libs/glicko-rater-1.0.jar
          prefix: jar

      - run:
          name: Collecting Gradle Build Caches
          command: |
            mkdir -p ~/gradle-build-caches
            [ -d ~/.gradle/caches ] &&
            [ -n "$(ls -Ad ~/.gradle/caches/build-cache-* 2>/dev/null)" ] &&
            mv ~/.gradle/caches/build-cache-* ~/gradle-build-caches || true
          when: always

      - save_cache:
          paths:
            - ~/gradle-build-caches
          key: gradle-build-caches-{{ .Revision }}
          when: always

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Build and push docker image
          command: |
            docker build --tag desp/glickorater:${CIRCLE_SHA1} .
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            docker push desp/glickorater:${CIRCLE_SHA1}
